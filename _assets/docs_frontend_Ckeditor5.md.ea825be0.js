import{g as n,f as s,E as a}from"./common-d6bd45c0.js";const t='{"title":"CKEditor5富文本编辑器定制","frontmatter":{"date":"2020-12-04","title":"CKEditor5富文本编辑器定制","tags":["前端"],"describe":"CKEditor5可以与 Angular，React 和 Vue.js 集成,也可以和 Electron 和移动设备（Android，iOS）兼容。自定义自己所需的编辑功能,如自动格式化,上传适配器,导出 PDF 等功能"},"headers":[{"level":2,"title":"为什么使用CKEditor5","slug":"为什么使用ckeditor5"},{"level":2,"title":"安装使用","slug":"安装使用"},{"level":3,"title":"1.创建自己的 CKEditor","slug":"_1-创建自己的-ckeditor"},{"level":2,"title":"功能插件","slug":"功能插件"},{"level":2,"title":"上传适配器","slug":"上传适配器"},{"level":3,"title":"自定义上传适配器","slug":"自定义上传适配器"},{"level":3,"title":"添加自定义插件","slug":"添加自定义插件"}],"relativePath":"docs/frontend/Ckeditor5.md","lastUpdated":1611324979670.276}';var p={};const o=a('<h2 id="为什么使用ckeditor5"><a class="header-anchor" href="#为什么使用ckeditor5" aria-hidden="true">#</a> 为什么使用<a href="https://ckeditor.com/ckeditor-5/" target="_blank" rel="noopener noreferrer">CKEditor5</a></h2><ul><li><strong>方便集成</strong>:可以与 Angular，React 和 Vue.js 集成,也可以和 Electron 和移动设备（Android，iOS）兼容。</li><li><strong>可定制化</strong>:可以自定义自己所需的编辑功能,如自动格式化,上传适配器,导出 PDF 等功能</li></ul><h2 id="安装使用"><a class="header-anchor" href="#安装使用" aria-hidden="true">#</a> 安装使用</h2><h3 id="_1-创建自己的-ckeditor"><a class="header-anchor" href="#_1-创建自己的-ckeditor" aria-hidden="true">#</a> 1.创建自己的 CKEditor</h3><p>有关更多详细信息，请查看此<a href="https://ckeditor.com/docs/ckeditor5/latest/builds/guides/integration/installing-plugins.html" target="_blank" rel="noopener noreferrer">官方教程</a>。也可以使用<a href="https://ckeditor.com/ckeditor-5/online-builder/" target="_blank" rel="noopener noreferrer">官方在线定制</a>选择自己需要的功能组件。</p><div class="language-bash"><pre><code><span class="token function">git</span> clone -b stable https://github.com/ckeditor/ckeditor5-build-classic.git\n<span class="token builtin class-name">cd</span> ckeditor5-build-classic\n<span class="token comment"># 下载依赖</span>\n<span class="token function">yarn</span>\n<span class="token comment"># 构建</span>\n<span class="token function">yarn</span> build\n</code></pre></div><p>构建完成后，您将在<code>build</code>文件夹中获得一个自定义 CKEditor 。</p><p>打开<code>sample/index.html</code>查看效果</p><h2 id="功能插件"><a class="header-anchor" href="#功能插件" aria-hidden="true">#</a> 功能插件</h2><ol><li>找到自己所需的功能插件,可以在<a href="https://www.npmjs.com/search?q=ckeditor" target="_blank" rel="noopener noreferrer">npm</a>上搜索.</li><li>例如文本对齐插件 <code>yarn add @ckeditor/ckeditor5-alignment</code></li><li>编辑<code>src/ckeditor.js</code>文件以将插件添加到将包含在构建中的插件列表中</li></ol><div class="language-js"><pre><code><span class="token comment">// The editor creator to use.</span>\n<span class="token keyword">import</span> ClassicEditorBase <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-editor-classic/src/classiceditor&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> Essentials <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-essentials/src/essentials&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> UploadAdapter <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-adapter-ckfinder/src/uploadadapter&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Autoformat <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-autoformat/src/autoformat&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Bold <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-basic-styles/src/bold&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Italic <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-basic-styles/src/italic&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> BlockQuote <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-block-quote/src/blockquote&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> EasyImage <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-easy-image/src/easyimage&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Heading <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-heading/src/heading&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Image <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-image/src/image&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ImageCaption <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-image/src/imagecaption&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ImageStyle <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-image/src/imagestyle&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ImageToolbar <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-image/src/imagetoolbar&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ImageUpload <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-image/src/imageupload&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Link <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-link/src/link&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> List <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-list/src/list&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Paragraph <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-paragraph/src/paragraph&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> Alignment <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-alignment/src/alignment&quot;</span><span class="token punctuation">;</span> <span class="token comment">// &lt;--- 添加在此处</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">ClassicEditor</span> <span class="token keyword">extends</span> <span class="token class-name">ClassicEditorBase</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token comment">// 引入所需插件.</span>\nClassicEditor<span class="token punctuation">.</span>builtinPlugins <span class="token operator">=</span> <span class="token punctuation">[</span>\n  Essentials<span class="token punctuation">,</span>\n  UploadAdapter<span class="token punctuation">,</span>\n  Autoformat<span class="token punctuation">,</span>\n  Bold<span class="token punctuation">,</span>\n  Italic<span class="token punctuation">,</span>\n  BlockQuote<span class="token punctuation">,</span>\n  EasyImage<span class="token punctuation">,</span>\n  Heading<span class="token punctuation">,</span>\n  Image<span class="token punctuation">,</span>\n  ImageCaption<span class="token punctuation">,</span>\n  ImageStyle<span class="token punctuation">,</span>\n  ImageToolbar<span class="token punctuation">,</span>\n  ImageUpload<span class="token punctuation">,</span>\n  Link<span class="token punctuation">,</span>\n  List<span class="token punctuation">,</span>\n  Paragraph<span class="token punctuation">,</span>\n  Alignment<span class="token punctuation">,</span> <span class="token comment">// &lt;--- 添加在此处</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 编辑器配置.</span>\nClassicEditor<span class="token punctuation">.</span>defaultConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  toolbar<span class="token operator">:</span> <span class="token punctuation">{</span>\n    items<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token string">&quot;heading&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;|&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;alignment&quot;</span><span class="token punctuation">,</span> <span class="token comment">// &lt;--- 添加在此处</span>\n      <span class="token string">&quot;bold&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;italic&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;link&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;bulletedList&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;numberedList&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;imageUpload&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;blockQuote&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;undo&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;redo&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  image<span class="token operator">:</span> <span class="token punctuation">{</span>\n    toolbar<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token string">&quot;imageStyle:full&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;imageStyle:side&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;|&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;imageTextAlternative&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 如果要改成中文,将 language 改为 zh</span>\n  <span class="token comment">// 注:这里要和webpack.config.js文件里的语言保持一致</span>\n  language<span class="token operator">:</span> <span class="token string">&quot;en&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="上传适配器"><a class="header-anchor" href="#上传适配器" aria-hidden="true">#</a> 上传适配器</h2><p>经常要在富文本编辑器中上传图片到自己的服务器上.所以要进行定制化.这里已<strong>阿里 OSS</strong>为例</p><h3 id="自定义上传适配器"><a class="header-anchor" href="#自定义上传适配器" aria-hidden="true">#</a> 自定义上传适配器</h3><p>新建<code>src/ali-ckeditor-upload.js</code>文件</p><div class="language-js"><pre><code><span class="token keyword">import</span> Plugin <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-core/src/plugin&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> FileRepository <span class="token keyword">from</span> <span class="token string">&quot;@ckeditor/ckeditor5-upload/src/filerepository&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token constant">OSS</span> <span class="token keyword">from</span> <span class="token string">&quot;ali-oss&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  region<span class="token operator">:</span> <span class="token string">&quot;&lt;你的 region&gt;&quot;</span><span class="token punctuation">,</span>\n  accessKeyId<span class="token operator">:</span> <span class="token string">&quot;&lt;你的 AccessKeyId&gt;&quot;</span><span class="token punctuation">,</span>\n  accessKeySecret<span class="token operator">:</span> <span class="token string">&quot;&lt;你的 AccessKeySecret&gt;&quot;</span><span class="token punctuation">,</span>\n  bucket<span class="token operator">:</span> <span class="token string">&quot;你的 bucket name&quot;</span><span class="token punctuation">,</span>\n  savePath<span class="token operator">:</span> <span class="token string">&quot;images/&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OSS</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  region<span class="token operator">:</span> config<span class="token punctuation">.</span>region<span class="token punctuation">,</span>\n  accessKeyId<span class="token operator">:</span> config<span class="token punctuation">.</span>accessKeyId<span class="token punctuation">,</span>\n  accessKeySecret<span class="token operator">:</span> config<span class="token punctuation">.</span>accessKeySecret<span class="token punctuation">,</span>\n  bucket<span class="token operator">:</span> config<span class="token punctuation">.</span>bucket<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">random_string</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">len</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  len <span class="token operator">=</span> len <span class="token operator">||</span> <span class="token number">32</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> chars <span class="token operator">=</span> <span class="token string">&quot;ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678&quot;</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> maxPos <span class="token operator">=</span> chars<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n  <span class="token keyword">let</span> pwd <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    pwd <span class="token operator">+=</span> chars<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> maxPos<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> pwd<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">today</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> year <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> month <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> date <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> year <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> date<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">imgPath</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">img</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  img <span class="token operator">=</span> img <span class="token operator">||</span> <span class="token string">&quot;.png&quot;</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> path <span class="token operator">=</span> config<span class="token punctuation">.</span>savePath <span class="token operator">+</span> <span class="token function">today</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token function">random_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> img<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> path <span class="token operator">+</span> name<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment">// 自定义插件需要从Plugin继承</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">AliUploadAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">Plugin</span> <span class="token punctuation">{</span>\n  <span class="token keyword">static</span> <span class="token keyword">get</span> <span class="token function">requires</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">[</span>FileRepository<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">static</span> <span class="token keyword">get</span> <span class="token function">pluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token string">&quot;ali-ckeditor-upload&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>editor<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>FileRepository<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">createUploadAdapter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">loader</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Adapter</span><span class="token punctuation">(</span>loader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Adapter</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">loader</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>loader <span class="token operator">=</span> loader<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 开始上传过程。</span>\n  <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>loader<span class="token punctuation">.</span>file<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>\n      <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\n        <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_initListeners</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_sendRequest</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">async</span> <span class="token function">_initListeners</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject<span class="token punctuation">,</span> file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 使用其他存储服务器时,在此处修改下面代码,将 file 上传即可</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token function">imgPath</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token comment">// 生成随机图片链接</span>\n      <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>config<span class="token punctuation">.</span>bucket<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>config<span class="token punctuation">.</span>region<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.aliyuncs.com/</span><span class="token template-punctuation string">`</span></span> <span class="token operator">+</span> name<span class="token punctuation">;</span>\n      <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">multipartUpload</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> file<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">progress</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 进度监听</span>\n          <span class="token comment">// console.log(Math.round(p * 100));</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token keyword">default</span><span class="token operator">:</span> url<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">_sendRequest</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    data<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;upload&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="添加自定义插件"><a class="header-anchor" href="#添加自定义插件" aria-hidden="true">#</a> 添加自定义插件</h3><p>转到<code>src/ckeditor.js</code>，进行以下更改以加载此插件。</p><div class="language-diff"><pre><code><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import AliUploadAdapter from &quot;./ali-ckeditor-upload&quot;;\n</span></span>\nexport default class ClassicEditor extends ClassicEditorBase {}\n\n// Plugins to include in the build.\nClassicEditor.builtinPlugins = [\n\t...,\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">\tAliUploadAdapter\n</span></span>];\n\n// Editor configuration.\nClassicEditor.defaultConfig = {...};\n</code></pre></div><p>重新<code>yarn build</code>打开<code>sample/index.html</code>查看效果</p>',20);p.render=function(a,t,p,e,c,l){return s(),n("div",null,[o])};export default p;export{t as __pageData};
