(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{56:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端"}},[t._v("#")]),t._v(" 前端")]),t._v(" "),a("h2",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),a("h3",{attrs:{id:"css3-新特性有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css3-新特性有哪些？"}},[t._v("#")]),t._v(" CSS3 新特性有哪些？")]),t._v(" "),a("p",[t._v("答:")]),t._v(" "),a("ol",[a("li",[t._v("颜色:新增 RGBA，HSLA 模式")]),t._v(" "),a("li",[t._v("文字阴影（text-shadow、）")]),t._v(" "),a("li",[t._v("边框: 圆角（border-radius）边框阴影: box-shadow")]),t._v(" "),a("li",[t._v("盒子模型:box-sizing")]),t._v(" "),a("li",[t._v("背景:background-size 设置背景图片的尺寸 background-origin 设置背景图片的原点 background-clip 设置背景图片的裁切区域，以”，”分隔可以设置多背景，用于自适应布局")]),t._v(" "),a("li",[t._v("渐变:linear-gradient、radial-gradient")]),t._v(" "),a("li",[t._v("过渡:transition，可实现动画")]),t._v(" "),a("li",[t._v("自定义动画")]),t._v(" "),a("li",[t._v("在 CSS3 中唯一引入的伪元素是 ::selection.")]),t._v(" "),a("li",[t._v("媒体查询，多栏布局")]),t._v(" "),a("li",[t._v("border-image\n12.2D 转换:transform:translate(x，y) rotate(x，y) skew(x，y) scale(x，y)")]),t._v(" "),a("li",[t._v("3D 转换")])]),t._v(" "),a("h3",{attrs:{id:"怎么让一个不定宽高的-div-垂直水平居中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怎么让一个不定宽高的-div-垂直水平居中"}},[t._v("#")]),t._v(" 怎么让一个不定宽高的 DIV,垂直水平居中?")]),t._v(" "),a("ul",[a("li",[t._v("使用 "),a("code",[t._v("CSS")]),t._v(" 表格方法:")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".parent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" table-cell"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-align")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("vertical-align")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("middle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".child")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("inline-block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("vertical-align")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("middle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("使用 "),a("code",[t._v("CSS3 transform")]),t._v(":")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".parent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" relative"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".child")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("-50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"box-sizing、transition、translate-分别是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#box-sizing、transition、translate-分别是什么？"}},[t._v("#")]),t._v(" box-sizing、transition、translate 分别是什么？")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("Box-sizing")]),t._v(": 用来指定盒模型的大小的计算方式。主要分为 "),a("code",[t._v("boreder-box")]),t._v("（从边框固定盒子大小）、"),a("code",[t._v("content-box")]),t._v(" （从内容固定盒子大小）两种计算方式。")]),t._v(" "),a("li",[a("code",[t._v("transition")]),t._v(": 当前元素只要有“属性”发生变化时，可以平滑的进行过渡。通过 "),a("code",[t._v("transtion-propety")]),t._v(" 设置过渡属 性;"),a("code",[t._v("transtion-duration")]),t._v(" 设置过渡时间;"),a("code",[t._v("trantion-timing-function")]),t._v(" 设置过渡速度;"),a("code",[t._v("trantion-delay")]),t._v(" 设置过渡延时")]),t._v(" "),a("li",[a("code",[t._v("translate")]),t._v(":通过移动改变元素的位置;有 x、y、z 三个属性")])]),t._v(" "),a("h3",{attrs:{id:"什么是-bfc？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-bfc？"}},[t._v("#")]),t._v(" 什么是 BFC？")]),t._v(" "),a("ol",[a("li",[a("p",[t._v('定义: BFC(Block formatting context)直译为"块级格式化上下文"。它是一个独立的渲染区域，只有 Block-level box 参 与， 它规定了内部的 Block-level Box 如何布局，并且与这个区域外部毫不相干。')])]),t._v(" "),a("li",[a("p",[t._v("布局规则:")]),t._v(" "),a("ul",[a("li",[t._v("内部的 Box 会在垂直方向，一个接一个地放置。")]),t._v(" "),a("li",[t._v("Box 垂直方向的距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠。")]),t._v(" "),a("li",[t._v("每个元素的 margin box 的左边， 与包含块 border box 的左边相接触(对于从左往右的格式化，否则相反)。 即使存在浮动也是如此。")]),t._v(" "),a("li",[t._v("BFC 的区域不会与 float box 重叠。")]),t._v(" "),a("li",[t._v("BFC 就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。")]),t._v(" "),a("li",[t._v("计算 BFC 的高度时，浮动元素也参与计算。")])])]),t._v(" "),a("li",[a("p",[t._v("哪些元素会生成 BFC:")]),t._v(" "),a("ul",[a("li",[t._v("根元素")]),t._v(" "),a("li",[t._v("float 属性不为 none")]),t._v(" "),a("li",[t._v("position 为 absolute 或 fixed")]),t._v(" "),a("li",[t._v("display 为 inline-block， table-cell， table-caption， flex， inline-flex")]),t._v(" "),a("li",[t._v("overflow 不为 visible")])])]),t._v(" "),a("li",[a("p",[t._v("作用：")]),t._v(" "),a("ul",[a("li",[t._v("可以包含浮动元素")]),t._v(" "),a("li",[t._v("不被浮动元素覆盖")]),t._v(" "),a("li",[t._v("阻止父子元素的 margin 折叠")])])])]),t._v(" "),a("h3",{attrs:{id:"清除浮动的几种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清除浮动的几种方式"}},[t._v("#")]),t._v(" 清除浮动的几种方式")]),t._v(" "),a("p",[t._v("答:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("父级 "),a("code",[t._v("div")]),t._v(" 定义 "),a("code",[t._v("height")]),t._v(" 原理:父级 "),a("code",[t._v("div")]),t._v(" 手动定义 "),a("code",[t._v("height")]),t._v("，就解决了父级 "),a("code",[t._v("div")]),t._v(" 无法自动获取到高度的问题。 简单、代码少、容易掌握 ，但只适合高度固定的布局.")])]),t._v(" "),a("li",[a("p",[t._v("结尾处加空 "),a("code",[t._v("div")]),t._v(" 标签 "),a("code",[t._v("clear:both")]),t._v(" 原理:在浮动元素的后面添加一个空 div 兄弟元素，利用 "),a("code",[t._v("css")]),t._v(" 提高的 "),a("code",[t._v("clear:both")]),t._v(" 清除浮动，让父级 "),a("code",[t._v("div")]),t._v(" 能自动获 取到高度 ，如果页面浮动布局多，就要增加很多空 "),a("code",[t._v("div")]),t._v("，让人感觉很不好 .")])]),t._v(" "),a("li",[a("p",[t._v("父级 "),a("code",[t._v("div")]),t._v(" 定义 伪类:"),a("code",[t._v("after")]),t._v(" 和 "),a("code",[t._v("zoom")])])])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*清除浮动代码*/")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix:after")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("visibility")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("line-height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("zoom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("原理:"),a("code",[t._v("IE8")]),t._v(" 以上和非 IE 浏览器才支持"),a("code",[t._v(":after")]),t._v("，原理和方法 2 有点类似，"),a("code",[t._v("zoom")]),t._v("(IE 转有属性)可解决 "),a("code",[t._v("ie6")]),t._v("，"),a("code",[t._v("ie7")]),t._v(" 浮动问题 ， 推荐使用，建议定义公共类，以减少 CSS 代码。")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[t._v("父级 "),a("code",[t._v("div")]),t._v(" 定义 "),a("code",[t._v("overflow:hidden")]),t._v(" 超出盒子部分会被隐藏，不推荐使用.")])]),t._v(" "),a("li",[a("p",[t._v("双伪元素法:")])])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix:before，.clearfix:after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("zoom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"css-sprite-是什么-有什么优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-sprite-是什么-有什么优缺点"}},[t._v("#")]),t._v(" "),a("code",[t._v("css sprite")]),t._v(" 是什么,有什么优缺点")]),t._v(" "),a("p",[t._v("概念：将多个小图片拼接到一个图片中。通过 "),a("code",[t._v("background-position")]),t._v(" 和元素尺寸调节需要显示的背景图案。")]),t._v(" "),a("p",[t._v("优点：")]),t._v(" "),a("ol",[a("li",[t._v("减少 HTTP 请求数，极大地提高页面加载速度")]),t._v(" "),a("li",[t._v("增加图片信息重复度，提高压缩比，减少图片大小")]),t._v(" "),a("li",[t._v("更换风格方便，只需在一张或几张图片上修改颜色或样式即可实现")])]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("ol",[a("li",[t._v("图片合并麻烦")]),t._v(" "),a("li",[t._v("维护麻烦，修改一个图片可能需要重新布局整个图片，样式")])]),t._v(" "),a("h3",{attrs:{id:"display-none-与visibility-hidden-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#display-none-与visibility-hidden-的区别"}},[t._v("#")]),t._v(" "),a("code",[t._v("display: none;")]),t._v("与"),a("code",[t._v("visibility: hidden;")]),t._v("的区别")]),t._v(" "),a("p",[t._v("联系：它们都能让元素不可见")]),t._v(" "),a("p",[t._v("区别：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("display：none；")]),t._v(" 使用该属性后，HTML 元素（对象）的宽度、高度等各种属性值都将“丢失”")]),t._v(" "),a("li",[a("code",[t._v("visibility：hidden；")]),t._v(" 使用该属性后，HTML 元素（对象）仅仅是在视觉上看不见（完全透明），而它所 占据的空间位置仍然存在，也即是说它仍具有高度、宽度等属性值。")])]),t._v(" "),a("h3",{attrs:{id:"css-有哪些继承属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-有哪些继承属性"}},[t._v("#")]),t._v(" css 有哪些继承属性")]),t._v(" "),a("ul",[a("li",[t._v("关于文字排版的属性如：\n"),a("ul",[a("li",[t._v("font")]),t._v(" "),a("li",[t._v("word-break")]),t._v(" "),a("li",[t._v("letter-spacing")]),t._v(" "),a("li",[t._v("text-align")]),t._v(" "),a("li",[t._v("text-rendering")]),t._v(" "),a("li",[t._v("word-spacing")]),t._v(" "),a("li",[t._v("white-space")]),t._v(" "),a("li",[t._v("text-indent")]),t._v(" "),a("li",[t._v("text-transform")]),t._v(" "),a("li",[t._v("text-shadow")])])]),t._v(" "),a("li",[t._v("line-height")]),t._v(" "),a("li",[t._v("color")]),t._v(" "),a("li",[t._v("visibility")]),t._v(" "),a("li",[t._v("cursor")])]),t._v(" "),a("h2",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),a("h3",{attrs:{id:"javascript-有哪几种数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-有哪几种数据类型"}},[t._v("#")]),t._v(" javascript 有哪几种数据类型")]),t._v(" "),a("ul",[a("li",[t._v("基本类型: "),a("code",[t._v("null")]),t._v("，"),a("code",[t._v("undefined")]),t._v("，"),a("code",[t._v("boolean")]),t._v("，"),a("code",[t._v("number")]),t._v("，"),a("code",[t._v("string")]),t._v("，"),a("code",[t._v("symbol")]),t._v(" "),a("ul",[a("li",[t._v("每个从"),a("code",[t._v("Symbol()")]),t._v("返回的"),a("code",[t._v("symbol")]),t._v("值都是唯一的。一个"),a("code",[t._v("symbol")]),t._v("值能作为对象属性的标识符；这是该数据类型仅有的目的")]),t._v(" "),a("li",[a("code",[t._v("Symbol")]),t._v("作用\n"),a("ul",[a("li",[a("code",[t._v("Symbol")]),t._v(" 作为属性名")]),t._v(" "),a("li",[a("code",[t._v("Symbol")]),t._v(" 对象元素的保护作用")])])])])]),t._v(" "),a("li",[t._v("对象:"),a("code",[t._v("object")])])]),t._v(" "),a("p",[t._v("PS:其中数字类型是浮点类型的，没有整型。并且浮点类型基于 IEEE 754标准实现，在使用中会遇到某些 Bug。"),a("code",[t._v("NaN")]),t._v(" 也属于 "),a("code",[t._v("number")]),t._v(" 类型，并且 "),a("code",[t._v("NaN")]),t._v(" 不等于自身。")]),t._v(" "),a("h3",{attrs:{id:"cookies-sessionstorage和localstorage区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookies-sessionstorage和localstorage区别"}},[t._v("#")]),t._v(" cookies sessionStorage和localstorage区别")]),t._v(" "),a("p",[t._v("相同点：都存储在客户端\n不同点：\n1.存储大小")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("cookie")]),t._v("数据大小不能超过4k。")]),t._v(" "),a("li",[a("code",[t._v("sessionStorage")]),t._v("和"),a("code",[t._v("localStorage")]),t._v(" 虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大。")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("有效时间")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("localStorage")]),t._v(" 存储持久数据，浏览器关闭后数据不丢失除非主动删除数据；")]),t._v(" "),a("li",[a("code",[t._v("sessionStorage")]),t._v(" 数据在当前浏览器窗口关闭后自动删除。")]),t._v(" "),a("li",[a("code",[t._v("cookie")]),t._v(" 设置的"),a("code",[t._v("cookie")]),t._v("过期时间之前一直有效，即使窗口或浏览器关闭")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("数据与服务器之间的交互方式")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("cookie")]),t._v("的数据会自动的传递到服务器，服务器端也可以写"),a("code",[t._v("cookie")]),t._v("到客户端")]),t._v(" "),a("li",[a("code",[t._v("sessionStorage")]),t._v("和localStorage`不会自动把数据发给服务器，仅在本地保存。")])]),t._v(" "),a("h3",{attrs:{id:"什么是事件冒泡-捕获？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是事件冒泡-捕获？"}},[t._v("#")]),t._v(" 什么是事件冒泡/捕获？")]),t._v(" "),a("ul",[a("li",[t._v("事件冒泡：子元素事件的触发会影响父元素事件； 开关事件冒泡：\n"),a("ol",[a("li",[t._v("开启事件冒泡："),a("code",[t._v("element.addEventListener(eventName，handler，false)")])]),t._v(" "),a("li",[t._v("关闭事件冒泡：假设传统方式事件的返回值为 e，就可以通过 "),a("code",[t._v("e.stopPropagation()")]),t._v("来关闭事件冒泡；")]),t._v(" "),a("li",[t._v("事件捕获：父元素的事件会影响子元素的事件； 开启事件捕获："),a("code",[t._v("element.addEventListener(eventName，handler，true)")])])])])]),t._v(" "),a("h3",{attrs:{id:"什么是事件委托机制？这样做有什么好处？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是事件委托机制？这样做有什么好处？"}},[t._v("#")]),t._v(" 什么是事件委托机制？这样做有什么好处？")]),t._v(" "),a("p",[t._v("事件委托，就是某个事件本来该自己干的，但是自己不干，交给别人来干。就叫事件委托。打个比方：一个 button 对象，本来自己需要监控自身的点击事件，但是自己不来监控这个点击事件，让自己的父节点来监控自己 的点击事件。")]),t._v(" "),a("p",[t._v("好处：")]),t._v(" "),a("ol",[a("li",[t._v("提高性能：列如，当有很多 li 同时需要注册事件的时候，如果使用传统方法来注册事件的话，需要给每 一个 li 注册事件。然而如果使用委托事件的话，就只需要将事件委托给该一个元素即可。这样就能提高性能。")]),t._v(" "),a("li",[t._v("新添加的元素还会有之前的事件；")])]),t._v(" "),a("h3",{attrs:{id:"_1、ajax-请求数据步骤是什么？传输的数据是用的暗文还是明文？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、ajax-请求数据步骤是什么？传输的数据是用的暗文还是明文？"}},[t._v("#")]),t._v(" 1、AJAX 请求数据步骤是什么？传输的数据是用的暗文还是明文？")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr； xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("； \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建一个异步对象 ")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Get"')]),t._v("， "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test.ashx"')]),t._v("， "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Get 方式括号中的三个参数分别为：1.发送请求的方式 2. 样请求的页面 3.是否异步 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//xhr.open("post"，"test.ashx"，true)；')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//xhr.setRequestHeader("Content-Type"， "application/x-www-form-urlencoded")； Post 方式发送数据')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这个回调函数主要用来检测服务器是否把数据返回给异步对象 ")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRequestHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"If-Modified-Since"')]),t._v("，"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置浏览器不使用缓存 ")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readystate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//readyState 属 性 指 出 了 XMLHttpRequest 对 象 在 发 送 / 接 收 数 据 过 程 中 所 处 的 几 个 状 态 。 XMLHttpRequest 对象会经历 5 种不同的状态。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0：未初始化。对象已经创建，但还未初始化，即还没调用 open 方法； ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1：已打开。对象已经创建并初始化，但还未调用 send 方法； ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2：已发送。已经调用 send 方法，但该对象正在等待状态码和头的返回； ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3：正在接收。已经接收了部分数据，但还不能使用该对象的属性和方法，因为状态和响应头不完整； ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4：已加载。所有数据接收完毕")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//检测服务器返回的响应报文的状态码是否为 200 alert(xhr.responseText)；")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//服务器返回的 Response 数据 ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//解析服务器返回的 jason 格式的数据 ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText； \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" json"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"("')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("； \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jason"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("； "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("；\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("； \nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//异步对象发送请求 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//xhr.send("txtName=roger&txtPwd=123")； 以 post 方式发送数据')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ajax 中 get 和 post 方式请求数据都是明文的。")]),t._v("\n")])])]),a("h3",{attrs:{id:"作用域和闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域和闭包"}},[t._v("#")]),t._v(" 作用域和闭包")]),t._v(" "),a("p",[t._v("答：简单的说，作用域是针对变量的，比如我们创建一个函数 a1，函数里面又包了一个子函数 a2。此时就存 在三个作用域： 全局作用域－a1 作用域－a2 作用域；即全局作用域包含了 a1 的作用域，a2 的作用域包含了 a1 的作用域。 当 a1 在查找变量的时候会先从自身的作用域区查找，找不到再到上一级 a2 的作用域查找，如果还没找到就 到全局作用域区查找，这样就形成了一个作用域链。 理解闭包首先要理解，js 垃圾回收机制，也就是当一个函数被执行完后，其作用域会被收回，如果形成了闭包，执行完后其作用域就不会被收回。")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("a1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("a2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("a2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("a1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("如果某个函数被他的父函数之外的一个变量引用，就会形成闭包。")]),t._v(" "),a("p",[t._v("闭包的作用，就是保存自己私有的变量，通过提供的接口（方法）给外部使用，但外部不能直接访问该变量。")])])}),[],!1,null,null,null);s.default=e.exports}}]);